steps:
  # Node actions - Install, test and build
  - name: node
    entrypoint: npm
    args: ['install']
  - name: node
    entrypoint: npm
    args: ['run', 'test', 'reactin']
  - name: node
    entrypoint: npm
    args: ['run', 'build', 'reactin']

  # Docker actions - build from images inside the app and store it inside the artifact repository
  # repository name: nx-images // image name: nx-docker:v1.0

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
        'build',
        # tag and name of the build
        '-t',
        'europe-west6-docker.pkg.dev/cloud-build-nx/nx-images/nx-docker:v1.0',
        # file path
        '-f',
        'apps/reactin/Dockerfile',
        # context of execution, in this case root
        '.',
      ]

  # Push the container image to Artifact Registry - nx-images
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'europe-west6-docker.pkg.dev/cloud-build-nx/nx-images/nx-docker:v1.0',
      ]

  # Deploys to gcloud run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        'reactin',
        '--image',
        'europe-west6-docker.pkg.dev/cloud-build-nx/nx-images/nx-docker:v1.0',
        '--region',
        'europe-west6',
        '--allow-unauthenticated',
      ]

images:
  - 'europe-west6-docker.pkg.dev/cloud-build-nx/nx-images/nx-docker:v1.0'
